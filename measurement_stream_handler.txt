// Thêm phương thức này vào WiFiManager.cpp
void WiFiManager::handleMeasurementStream() {
    // Trang web tự động cập nhật
    String html = "<!DOCTYPE html><html>"
                  "<head><meta charset='UTF-8'>"
                  "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
                  "<title>Kết quả đo</title>"
                  "<style>"
                  "body{font-family:Arial;margin:0;padding:10px;background:#f0f0f0;text-align:center}"
                  ".container{max-width:400px;margin:0 auto;background:white;padding:15px;border-radius:8px;box-shadow:0 1px 5px rgba(0,0,0,0.1)}"
                  ".reading{font-size:24px;margin:15px 0}"
                  ".hr{color:#f44336}.spo2{color:#2196F3}"
                  ".progress{width:100%;background:#ddd;border-radius:4px;margin:15px 0;height:20px}"
                  ".bar{height:20px;background:#4CAF50;border-radius:4px;text-align:center;line-height:20px;color:white}"
                  "</style>"
                  "</head><body><div class='container'>"
                  "<h1>Kết quả đo lường</h1>";

    // Lấy dữ liệu từ SensorManager
    extern SensorManager sensorManager;
    
    // Hiển thị dữ liệu theo trạng thái đo
    if (sensorManager.isMeasurementReady()) {
        // Đã hoàn tất - hiển thị kết quả trung bình
        int32_t avgHR = sensorManager.getAveragedHR();
        int32_t avgSpO2 = sensorManager.getAveragedSpO2();
        
        html += "<div style='color:#4CAF50;font-weight:bold;font-size:18px;margin:15px 0'>✓ Hoàn tất</div>"
                "<div class='reading hr'>Nhịp tim: " + String(avgHR) + " BPM</div>"
                "<div class='reading spo2'>SpO2: " + String(avgSpO2) + " %</div>"
                "<form action='/measurement'><button style='background:#4CAF50;color:white;padding:10px;border:none;border-radius:4px;cursor:pointer;margin-top:15px'>Xem chi tiết</button></form>";
    }
    else if (sensorManager.isMeasurementInProgress()) {
        // Đang đo - hiển thị tiến độ
        int progress = (sensorManager.getValidReadingCount() * 100) / REQUIRED_VALID_READINGS;
        
        html += "<div style='color:#2196F3;font-weight:bold;margin:15px 0'>Đang đo...</div>"
                "<div class='progress'><div class='bar' style='width:" + String(progress) + "%'>" 
                + String(sensorManager.getValidReadingCount()) + "/5</div></div>"
                "<div class='reading hr'>Nhịp tim: " + String(sensorManager.getHeartRate()) + " BPM</div>"
                "<div class='reading spo2'>SpO2: " + String(sensorManager.getSPO2()) + " %</div>"
                "<p>Refresh sau 2 giây...</p>"
                "<meta http-equiv='refresh' content='2'>";
    }
    else {
        // Chưa bắt đầu hoặc đã kết thúc
        html += "<p>Đặt ngón tay lên cảm biến để bắt đầu</p>"
                "<div class='reading hr'>Nhịp tim: --</div>"
                "<div class='reading spo2'>SpO2: --%</div>"
                "<form action='/measurement'><button style='background:#4CAF50;color:white;padding:10px;border:none;border-radius:4px;cursor:pointer;margin-top:15px'>Đến trang chính</button></form>"
                "<meta http-equiv='refresh' content='3'>";
    }
    
    html += "</div></body></html>";
    
    // Gửi HTTP response với cache control
    server->sendHeader("Cache-Control", "no-cache, no-store, must-revalidate");
    server->sendHeader("Pragma", "no-cache");
    server->sendHeader("Expires", "-1");
    server->send(200, "text/html", html);
}

// Đừng quên thêm khai báo trong WiFiManager.h:
// void handleMeasurementStream();
